title,description,category,input_format,output_format,constraints,sample_input,sample_output,difficulty,hints
"Is Unique","Implement an algorithm to determine if a string has all unique characters. What if you cannot use additional data structures?","Arrays and Strings","String","Boolean","Cannot use additional data structures","[[ ""apple"" ],[ ""bananna"" ],[ ""aeiou"" ]]","[false, false, true]","Medium","1. Try a Hash Table; 2. Could a bit vector be useful?; 3. Can you solve it in O(N log N) time?"
"Check Permutation","Given two strings, write a method to decide if one is a permutation of the other.","Arrays and Strings","String","Boolean","Case sensitive and whitespace is significant","[[ ""abc de"", ""de abc"" ],[ ""Hello"", ""olleh"" ]]","[true, false]","Medium","1. Could a Hash Table be useful; 2. Strings have same characters but in different orders"
"URLify","Write an method to replace all spaces in a string with '%20'.","Arrays and Strings","String","String","You may assume that the string has sufficient space at the end to hold the additional characters and that you are given the true length","[[ ""app le"", ""banan a"" ]]","[[ ""app%20le"" ],[ ""banan%20a"" ]]","Easy","1. You might find you need to know the number of spaces. Can you just count them?"
"Palindrome Permutation","Given a string, write a function to check if it is a permutation of a palindrome.","Arrays and Strings","String","Boolean","The palindrome does not need to be limited to dictionary words.","[[ ""Tact Coa"", ""abc"" ]]","[true, false]","Medium","1. Have you tried a Hash Table?; 2. Can you reduce space usage by using a bit vector?; 3. What characteristic does a palindrome permutation have?"
"One Away","Given two strings write a function to check if they are one edit (or zero edit) away","Arrays and Strings","String","Boolean","There are three types of edit: insert, remove, or replace.","[[ ""pale"", ""ple"" ],[ ""pale"", ""bale"" ],[ ""pale"", ""bake"" ]]","[true, true, false]","Medium","1. Can you do all 3 checks in a single pass?"
"String Compression","Implement an method to perform basic string compression using the counts of repeated characters.","Arrays and Strings","String","String","If the compressed string would not become smaller than the original string, return the original string. You can assume the string has only uppercase and lowercase letters.","[[ ""aabcccccaaa"", ""abc"" ]]","[[ ""a2b1c5a3"" ],[ ""abc"" ]]","Medium","1. First compress the string, then check the length."
"Rotate Matrix","Given an image represented by an N×N matrix, where each pixel is 4 bytes, rotate the image by 90 degrees.","Arrays and Strings","Data Structure","Data Structure","Can you do this in place?","[[[1, 2, 3],[4, 5, 6],[7, 8, 9]]]","[[[7, 4, 1],[8, 5, 2],[9, 6, 3]]]","Medium","Can you rotate one layer at a time?"
"Zero Matrix","Write an algorithm such that if an element in an M×N matrix is 0, its entire row and column are set to 0.","Arrays and Strings","Data Structure","Data Structure","None","[[[1, 2, 3],[4, 0, 6],[7, 8, 9]]]","[[[1, 0, 3],[0, 0, 0],[7, 0, 9]]]","Hard","Lazy"
"String Rotation","Given two strings, s1 and s2, check if s2 is a rotation of s1 using only one call to is_substring.","Arrays and Strings","String","Boolean","None","[[ ""waterbottle"", ""erbottlewat"" ],[ ""hello"", ""helol"" ]]","[true, false]","Medium","Lazy"
"Remove Dups","Write code to remove duplicates from an unsorted list.","Linked Lists","Linked List","Linked List","How would you solve this problem if a temporary buffer is not allowed?","[[1,2,2,3,3,4]]","[[1,2,3,4]]","Medium","1. Hash Table; 2. try using two pointers."
"Find the middle Node","Write a method to return the middle Node.","Linked Lists","Linked List","Linked List","If the linked list has even number of nodes, return the first node of the second half of the list.","[[1, 2, 3, 4, 5]]","[[3, 4, 5]]","Medium","1. Initialize slow and fast pointers to the head of the LL; 2. While fast is not None and fast.next is not None, move slow one step and fast two steps; 3. Return the slow pointer."
"Has Loop","Write a method called has_loop that is part of the linked list class.","Linked Lists","Linked List","Boolean","You are required to use Floyd's cycle-finding algorithm.","[[3,2,0,-4], 1]","[true]","Medium","1. Initialize slow and fast pointers to the head of the LL; 2. While fast is not None and fast.next is not None, move slow one step and fast two steps; 3. Return the slow pointer; 4. If slow equals fast, the LL has a loop."
"Find the Kth Node From End","Implement the find_kth_from_end function, which takes a linked list and an integer k as input and returns the k-th node from the end of the list.","Linked Lists","Linked List","Linked List","Without using Length","[[1, 2, 3, 4, 5], 2]","[[4, 5]]","Hard","Lazy"
"Partition List","Implement the partition_list member function for the LinkedList class, which partitions the list such that all nodes with values less than x come before nodes with values greater than or equal to x.","Linked Lists","Linked List","Linked List","The original relative order of the nodes should be preserved.","[[1,4,3,2,5,2], 3]","[[1,2,2,4,3,5]]","Hard","Lazy"
"Binary to Decimal","Implement the binary_to_decimal method for the LinkedList class. This method should convert a binary number, represented as a linked list, to its decimal equivalent.","Linked Lists","Linked List","Linked List","None","[[1,0,1,1]]","[11]","Hard","Lazy"
"Reverse Between","Write a method reverse_between within the LinkedList class that reverses the nodes of the linked list from start_index to end_index (inclusive, using 0-based indexing) in one pass and in-place.","Linked Lists","Linked List","Linked List","You can assume that start_index and end_index are not out of bounds.","[[1, 2, 3, 4, 5], 2, 4]","[[1, 4, 3, 2, 5]]","Hard","Lazy"
"Implement Stack Using a List","Create a constructor for class Stack that implements a new stack with an empty list called stack_list.","Stacks and Queues","String","String","None","[[ ""push"", ""push"", ""top"", ""pop"", ""isEmpty"" ], [5, 10, null, null, null]]","[10, 10, false]","Easy","Class"
"Parantheses Balanced","Your program should take a string of parentheses as input and return True if it is balanced, or False if it is not. In order to solve this problem, use a Stack data structure.","Stacks and Queues","String","Boolean","None","[ ""(()"" ]","[false]","Medium","Lazy"
"Reverse a String","The reverse_string function takes a single parameter string, which is the string you want to reverse.","Stacks and Queues","String","String","None","[ ""hello"" ]","[ ""olleh"" ]","Easy","Lazy"
"Sort Stack","The sort_stack function takes a single argument, a Stack object. The function should sort the elements in the stack in ascending order (the lowest value will be at the top of the stack) using only one additional stack.","Stacks and Queues","List","List","None","[[34, 3, 31, 98, 92, 23]]","[[98, 92, 34, 31, 23, 3]]","Medium","None"
"Queue Using Stacks: Enqueue","You are given a class MyQueue which implements a queue using two stacks. Your task is to implement the enqueue method which should add an element to the back of the queue.","Stacks and Queues","List","List","None","[[10,20], 30]","[[10,20,30]]","Medium","None"
"Queue Using Stacks: Dequeue","You have been tasked with implementing a queue data structure using two stacks in Python, and you need to write the dequeue method.","Stacks and Queues","List","List","The dequeue method should remove and return the first element in the queue.","[[10,20,30]]","[10]","Medium","None"
